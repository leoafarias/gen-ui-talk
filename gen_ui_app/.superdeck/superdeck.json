{
  "slides": [
    {
      "key": "y6odZRD8",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "# Generative UI {.heading}\n# with Flutter {.subheading}",
              "align": "center",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 2,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "B0eap8fa",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "\n\n#### Leo Farias {.heading}\n#### @leoafarias {.subheading}\n",
              "align": "center",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            },
            {
              "content": "- Founder/CEO/CTO\n- Open Source Contributor (fvm, mix, superdeck, others..)\n- Flutter & Dart GDE\n- Passionate about UI/UX/DX",
              "align": "center_left",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "1iWWSXBj",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            },
            {
              "content": "\n> [!WARNING]  \n> This presentation contains live AI-generated content. Unexpected things may occur during the demonstration.\n",
              "align": "center_left",
              "flex": 2,
              "scrollable": false,
              "type": "column"
            },
            {
              "content": "",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "RYCoT56B",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "\n### Generative UI {.heading}\n",
              "align": "center_right",
              "flex": 2,
              "scrollable": false,
              "type": "column"
            },
            {
              "content": "\n## VS \n",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            },
            {
              "content": "### AI Assisted Code Generation",
              "flex": 2,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "o9smpzVG",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "### What is Generative UI? {.heading}\n",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            },
            {
              "content": "- LLMs are great at generating content based on context\n- GUIs are great at providing structured, interactive interfaces for user input and navigation",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "BM8dTIiu",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "# LLM ❤️ GUI {.heading}",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "wlPRX3Si",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            },
            {
              "content": "\n### Creates dynamic, context-aware UIs by interpreting actions and maintaining state with LLMs for fluid, interactive responses. {.heading}\n",
              "align": "center",
              "flex": 5,
              "scrollable": false,
              "type": "column"
            },
            {
              "content": "",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "9ERBjvfD",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "### Benefits over Chat\n\n- More intuitive and user-friendly, especially for complex tasks\n- Faster feedback loop between users and LLMs\n- Enhances efficiency and interaction",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "Vj0KwFcQ",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            },
            {
              "content": "\n### Flutter is Well-Suited for Generative UI\nBuilt for any screen: Ideal for generating adaptive UIs across devices and platforms.\n",
              "align": "center",
              "flex": 3,
              "scrollable": false,
              "type": "column"
            },
            {
              "content": "",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "vHY8gszG",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "### How can LLMs Understand Your UI?\n",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            },
            {
              "content": "![structured_output](assets/structured_output.png)",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "qk3SfBXV",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "\n\n### Define the Schema {.heading}\n",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            },
            {
              "content": "```dart\nfinal schema = Schema.array(\n  description: 'List of recipes',\n  items: Schema.object(\n    properties: {\n      'recipeName': Schema.string(\n        description: 'Name of the recipe.',\n        nullable: false,\n      ),\n    },\n    requiredProperties: ['recipeName'],\n  ),\n);\n\n```{.code}",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "KzZen8xS",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "\n\n### Configure responseMimeType & responseSchema {.heading}\n",
              "align": "bottom_center",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            },
            {
              "content": "```dart\nfinal schema = Schema.array(\n  description: 'List of recipes',\n  items: Schema.object(\n    properties: {\n      'recipeName': Schema.string(\n        description: 'Name of the recipe.',\n        nullable: false,\n      ),\n    },\n    requiredProperties: ['recipeName'],\n  ),\n);\n\nfinal model = GenerativeModel(\n  model: 'gemini-1.5-pro',\n  apiKey: apiKey,\n  generationConfig: GenerationConfig(\n    responseMimeType: 'application/json',\n    responseSchema: schema,\n  ),\n);\n\n```{.code}",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "9BjDiS9I",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "\n\n#### Passing a prompt to your model {.heading}\n",
              "flex": 2,
              "scrollable": false,
              "type": "column"
            },
            {
              "content": "\n\n```dart\nfinal prompt = 'List a few popular cookie recipes.';\nfinal response = await model.generateContent([Content.text(prompt)]);\n\nprint(response.candidates.first.content);\n\n```{.code}\n",
              "flex": 3,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 2,
          "scrollable": false,
          "type": "section"
        },
        {
          "blocks": [
            {
              "content": "\n\n#### JSON Response\n",
              "align": "bottom_left",
              "flex": 2,
              "scrollable": false,
              "type": "column"
            },
            {
              "content": "```json\n[\n  {\n    \"recipeName\": \"Chocolate Chip Cookies\"\n  },\n  {\n    \"recipeName\": \"Peanut Butter Cookies\"\n  },\n  {\n    \"recipeName\": \"Snickerdoodles\"\n  }\n]\n```",
              "flex": 3,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 3,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "LSp4z6Ax",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "### Color Palette Generator\n\nGenerate a color palette based on a given text.\n\n- Name of the palette\n- Font family\n- Font color\n- Color for each corner of the palette",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "NPSFThkt",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "\n\n## Color Palette Schema\n",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            },
            {
              "content": "```dart\nfinal schema = Schema.object(\n  properties: {\n    'name': Schema.string(\n      description: 'Name of the color palette',\n      nullable: false,\n    ),\n    'font': Schema.enumString(\n      enumValues: ColorPaletteFontFamily.enumString,\n      description: 'Font to use for color palette name',\n      nullable: false,\n    ),\n    'fontColor': Schema.string(\n      description: 'Font color. Format: #FF0000',\n      nullable: false,\n    ),\n    'topLeftColor': Schema.string(\n      description: 'Top left color. Format: #FF0000',\n      nullable: false,\n    ),\n    'topRightColor': Schema.string(\n      description: 'Top right color. Format: #FF0000',\n      nullable: false,\n    ),\n    'bottomLeftColor': Schema.string(\n      description: 'Bottom left color. Format: #FF0000',\n      nullable: false,\n    ),\n    'bottomRightColor': Schema.string(\n      description: 'Bottom right color. Format: #FF0000',\n      nullable: false,\n    )\n  },\n  requiredProperties: [\n    'name',\n    'font',\n    'fontColor',\n    'topLeftColor',\n    'topRightColor',\n    'bottomLeftColor',\n    'bottomRightColor',\n  ],\n);\n\n```",
              "flex": 2,
              "scrollable": true,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "cHfhAMYd",
      "options": {
        "style": "demo"
      },
      "sections": [
        {
          "blocks": [
            {
              "name": "colorPalette",
              "flex": 1,
              "scrollable": false,
              "type": "widget",
              "kind": "schema",
              "prompts": [
                "tropical",
                "vibrant",
                "pastel",
                "chocolatey pink unicorn",
                "cyberpunk"
              ]
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "qbrRY3PB",
      "options": {
        "style": "demo"
      },
      "sections": [
        {
          "blocks": [
            {
              "name": "colorPalette",
              "flex": 1,
              "scrollable": false,
              "type": "widget",
              "kind": "widget",
              "prompts": [
                "tropical",
                "vibrant",
                "pastel",
                "chocolatey pink unicorn",
                "cyberpunk"
              ]
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "H0jUl8Aj",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "## LLMs Orchestrate APIs",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "Orj9fgGT",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "\n#### Gemini Function Calling\n",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            },
            {
              "content": "\nThe Function Calling feature is in Beta release\n",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        },
        {
          "blocks": [
            {
              "content": "![llm tools](assets/llm_tools.png){.cover}",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 4,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "zRNLYgst",
      "options": {
        "style": "demo"
      },
      "sections": [
        {
          "blocks": [
            {
              "name": "lightControl",
              "flex": 1,
              "scrollable": false,
              "type": "widget",
              "kind": "schema",
              "prompts": [
                "Dim the lights by 20",
                "Increase by 35",
                "Turn off the lights",
                "Set it to 80",
                "Lower by half",
                "Max brightness"
              ]
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "hvptxGXN",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "\n\n### User Interaction {.heading}\nNatural Language way to interact with an LLM\n",
              "align": "bottom_right",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            },
            {
              "content": "![llm response](assets/llm_interaction.png)",
              "flex": 2,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "vNPVWgez",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "\n### Widget Response {.heading}\n",
              "align": "center_left",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            },
            {
              "content": "![widget_response](assets/widget_response.png)",
              "flex": 3,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "wbQnOux2",
      "options": {
        "style": "demo"
      },
      "sections": [
        {
          "blocks": [
            {
              "name": "lightControl",
              "flex": 1,
              "scrollable": false,
              "type": "widget",
              "kind": "widget",
              "prompts": [
                "Dim the lights by 20",
                "Increase by 35",
                "Turn off the lights",
                "Set it to 80",
                "Lower by half",
                "Max brightness"
              ]
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "pNxPyfLK",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "## What if the tool to use is a widget schema?",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "ubDKfZYy",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "![widget_schema](assets/widget_schema.png)",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "NZRVZ1Vo",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "\n### Dropdown Widget Schema\n\n```dart\nclass DropdownSchemaDto {\n  final String label;\n  final String currentValue;\n  final List<String> options;\n\n  DropdownSchemaDto({\n    required this.label,\n    required this.currentValue,\n    required this.options,\n  });\n\n```\n",
              "flex": 2,
              "scrollable": false,
              "type": "column"
            },
            {
              "content": "```dart\n  static final schema = Schema.object(properties: {\n    'label': Schema.string(\n      description: 'The label of the dropdown',\n      nullable: false,\n    ),\n    'currentValue': Schema.string(\n      description: 'The currentValue of the dropdown',\n      nullable: false,\n    ),\n    'options': Schema.array(\n      description: 'The options of the dropdown',\n      items: Schema.string(\n        description: 'The options of the dropdown',\n        nullable: false,\n      ),\n      nullable: false,\n    )\n  });\n}\n```",
              "flex": 3,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "w2vRYcf2",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "### Dropdown Schema Builder\n",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            },
            {
              "content": "```dart\n ListTile(\n  title: Text(schema.label),\n  trailing: DropdownButton<String>(\n    value: schema.currentValue,\n    items: schema.options.map((option) {\n      return DropdownMenuItem<String>(\n        value: option,\n        child: Text(option),\n      );\n    }).toList(),\n    onChanged: (newValue) {},\n  ),\n);\n```",
              "flex": 2,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "Wxrj9iSH",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "### Widget Schemas\n\n\n```dart\nfinal schema = Schema.object(properties: {\n  'textFields': Schema.array(\n    description: 'A list of text fields',\n    items: TextFieldSchemaDto.schema,\n    nullable: true,\n  ),\n  'dropdowns': Schema.array(\n    description: 'A list of dropdowns',\n    items: DropdownSchemaDto.schema,\n    nullable: true,\n  ),\n  'colorPickers': Schema.array(\n    description: 'A list of colors pickers',\n    items: ColorPickerDtoSchema.schema,\n    nullable: true,\n  ),\n});\n\n```",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "fpxHqWPC",
      "options": {
        "style": "demo"
      },
      "sections": [
        {
          "blocks": [
            {
              "name": "widgetSchema",
              "flex": 1,
              "scrollable": false,
              "type": "widget",
              "kind": "widget",
              "prompts": [
                "Change top colors",
                "Change font",
                "Change all colors",
                "Change everything"
              ]
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "6BveUMOZ",
      "options": {
        "style": "quote"
      },
      "sections": [
        {
          "blocks": [
            {
              "content": "> The future of UI might be orchestrating\n> user experiences rather than creating it.",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    },
    {
      "key": "XoYNuUMV",
      "options": {},
      "sections": [
        {
          "blocks": [
            {
              "content": "\n# Thank you\n",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            }
          ],
          "align": "bottom_center",
          "flex": 2,
          "scrollable": false,
          "type": "section"
        },
        {
          "blocks": [
            {
              "content": "\nLeo Farias\n@leoafarias\n(GitHub, Twitter/X)\n\n",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            },
            {
              "content": "#### Slides + Code\nhttps://github.com/leoafarias/gen-ui-talk",
              "flex": 1,
              "scrollable": false,
              "type": "column"
            }
          ],
          "flex": 1,
          "scrollable": false,
          "type": "section"
        }
      ],
      "comments": []
    }
  ],
  "config": {}
}