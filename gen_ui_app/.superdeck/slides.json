{
  "config": {},
  "slides": [
    {
      "key": "D36namou",
      "options": {},
      "markdown": "{@section flex: 2}\n{@column\n  align: center\n}\n# Generative UI {.heading}\n# with Flutter {.subheading}",
      "sections": [
        {
          "blocks": [
            {
              "align": "center",
              "content": "# Generative UI {.heading}\n# with Flutter {.subheading}",
              "scrollable": false
            }
          ],
          "flex": 2,
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_D36namou.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "brprlAOT",
      "options": {},
      "markdown": "{@column \n  align: center\n}\n\n#### Leo Farias {.heading}\n@leoafarias {.subheading}\n\n{@column align: center_left}\n- Founder/CEO/CTO\n- Open Source Contributor (fvm, mix, superdeck, others..)\n- Flutter & Dart GDE\n- Passionate about UI/UX/DX",
      "sections": [
        {
          "blocks": [
            {
              "align": "center",
              "content": "#### Leo Farias {.heading}\n@leoafarias {.subheading}\n",
              "scrollable": false
            },
            {
              "align": "center_left",
              "content": "- Founder/CEO/CTO\n- Open Source Contributor (fvm, mix, superdeck, others..)\n- Flutter & Dart GDE\n- Passionate about UI/UX/DX",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_brprlAOT.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "JRXV2rTe",
      "options": {},
      "markdown": "{@column}\n\n{@column \n  align: center_left \n  flex: 2\n}\n> [!WARNING]  \n> Esta presentación contiene contenido generado en vivo por IA. Durante la demostración pueden ocurrir eventos inesperados\n\n{@column}",
      "sections": [
        {
          "blocks": [
            {
              "content": "",
              "scrollable": false
            },
            {
              "flex": 2,
              "align": "center_left",
              "content": "> [!WARNING]  \n> Esta presentación contiene contenido generado en vivo por IA. Durante la demostración pueden ocurrir eventos inesperados\n",
              "scrollable": false
            },
            {
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_JRXV2rTe.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "gTvLpmRu",
      "options": {},
      "markdown": "{@column \n  flex: 2 \n  align: center_right\n}\n### Generative UI {.heading}\n{@column}\n## VS \n{@column flex: 2}\n### AI Assisted Code Generation",
      "sections": [
        {
          "blocks": [
            {
              "flex": 2,
              "align": "center_right",
              "content": "### Generative UI {.heading}",
              "scrollable": false
            },
            {
              "content": "## VS ",
              "scrollable": false
            },
            {
              "flex": 2,
              "content": "### AI Assisted Code Generation",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_gTvLpmRu.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "pU4bIipS",
      "options": {},
      "markdown": "### ¿Qué es una UI Generativa? {.heading}\n\n{@column}\n\n- Los LLM son excelentes para generar contenido basado en el contexto.\n- Las GUI son excelentes para proporcionar interfaces estructuradas e interactivas para la entrada de usuario y navegación.",
      "sections": [
        {
          "blocks": [
            {
              "content": "### ¿Qué es una UI Generativa? {.heading}\n",
              "scrollable": false
            },
            {
              "content": "- Los LLM son excelentes para generar contenido basado en el contexto.\n- Las GUI son excelentes para proporcionar interfaces estructuradas e interactivas para la entrada de usuario y navegación.",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_pU4bIipS.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "BM8dTIiu",
      "options": {},
      "markdown": "# LLM ❤️ GUI {.heading}",
      "sections": [
        {
          "blocks": [
            {
              "content": "# LLM ❤️ GUI {.heading}",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_BM8dTIiu.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "ZpiYHha1",
      "options": {},
      "markdown": "{@column}\n{@column\n  flex: 5\n  align: center\n}\n### Crea interfaces dinámicas y sensibles al contexto al interpretar acciones y mantener el estado con LLMs para respuestas fluidas e interactivas. {.heading}\n\n{@column}",
      "sections": [
        {
          "blocks": [
            {
              "scrollable": false
            },
            {
              "flex": 5,
              "align": "center",
              "content": "### Crea interfaces dinámicas y sensibles al contexto al interpretar acciones y mantener el estado con LLMs para respuestas fluidas e interactivas. {.heading}\n",
              "scrollable": false
            },
            {
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_ZpiYHha1.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "ZhsL96Je",
      "options": {},
      "markdown": "### Ventajas sobre el chat\n\n-\tMás intuitivo y fácil de usar, especialmente para tareas complejas\n-\tCiclo de feedback más rápido entre usuarios y LLMs\n-\tMejora la eficiencia y la interacción",
      "sections": [
        {
          "blocks": [
            {
              "content": "### Ventajas sobre el chat\n\n-\tMás intuitivo y fácil de usar, especialmente para tareas complejas\n-\tCiclo de feedback más rápido entre usuarios y LLMs\n-\tMejora la eficiencia y la interacción",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_ZhsL96Je.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "oVui9VPS",
      "options": {},
      "markdown": "{@column}\n\n{@column\n  flex: 3 \n  align: center\n}\n### Flutter es ideal para UI Generativa\nBuilt for any screen: Ideal para generar UIs adaptativas en diversos dispositivos y plataformas.\n\n{@column}",
      "sections": [
        {
          "blocks": [
            {
              "content": "",
              "scrollable": false
            },
            {
              "flex": 3,
              "align": "center",
              "content": "### Flutter es ideal para UI Generativa\nBuilt for any screen: Ideal para generar UIs adaptativas en diversos dispositivos y plataformas.\n",
              "scrollable": false
            },
            {
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_oVui9VPS.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "jIeTulIX",
      "options": {},
      "markdown": "### ¿Cómo pueden los LLM comprender tu UI?\n\n{@column}\n\n![structured_output](assets/structured_output.png)",
      "sections": [
        {
          "blocks": [
            {
              "content": "### ¿Cómo pueden los LLM comprender tu UI?\n",
              "scrollable": false
            },
            {
              "content": "![structured_output](assets/structured_output.png)",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_jIeTulIX.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "3gDaO4JA",
      "options": {},
      "markdown": "{@column}\n\n### Definir el schema{.heading}\n\n{@column}\n\n```dart\nfinal schema = Schema.array(\n  description: 'List of recipes',\n  items: Schema.object(\n    properties: {\n      'recipeName': Schema.string(\n        description: 'Name of the recipe.',\n        nullable: false,\n      ),\n    },\n    requiredProperties: ['recipeName'],\n  ),\n);\n\n```{.code}",
      "sections": [
        {
          "blocks": [
            {
              "content": "### Definir el schema{.heading}\n",
              "scrollable": false
            },
            {
              "content": "```dart\nfinal schema = Schema.array(\n  description: 'List of recipes',\n  items: Schema.object(\n    properties: {\n      'recipeName': Schema.string(\n        description: 'Name of the recipe.',\n        nullable: false,\n      ),\n    },\n    requiredProperties: ['recipeName'],\n  ),\n);\n\n```{.code}",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_3gDaO4JA.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "Mmn4FSEE",
      "options": {},
      "markdown": "{@column align: bottom_center}\n\n### Configurar responseMimeType y responseSchema {.heading}\n\n{@column}\n\n```dart\nfinal schema = Schema.array(\n  description: 'List of recipes',\n  items: Schema.object(\n    properties: {\n      'recipeName': Schema.string(\n        description: 'Name of the recipe.',\n        nullable: false,\n      ),\n    },\n    requiredProperties: ['recipeName'],\n  ),\n);\n\n\nfinal model = GenerativeModel(\n  model: 'gemini-1.5-pro',\n  apiKey: apiKey,\n  generationConfig: GenerationConfig(\n    responseMimeType: 'application/json',\n    responseSchema: schema,\n  ),\n);\n\n```{.code}",
      "sections": [
        {
          "blocks": [
            {
              "align": "bottom_center",
              "content": "### Configurar responseMimeType y responseSchema {.heading}\n",
              "scrollable": false
            },
            {
              "content": "```dart\nfinal schema = Schema.array(\n  description: 'List of recipes',\n  items: Schema.object(\n    properties: {\n      'recipeName': Schema.string(\n        description: 'Name of the recipe.',\n        nullable: false,\n      ),\n    },\n    requiredProperties: ['recipeName'],\n  ),\n);\n\n\nfinal model = GenerativeModel(\n  model: 'gemini-1.5-pro',\n  apiKey: apiKey,\n  generationConfig: GenerationConfig(\n    responseMimeType: 'application/json',\n    responseSchema: schema,\n  ),\n);\n\n```{.code}",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_Mmn4FSEE.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "KvQsJipa",
      "options": {},
      "markdown": "{@section flex: 2}\n\n\n{@column flex: 2}\n\n#### Pasar un prompt a tu modelo {.heading}\n\n{@column flex: 3}\n\n```dart\nfinal prompt = 'List a few popular cookie recipes.';\nfinal response = await model.generateContent([Content.text(prompt)]);\n\nprint(response.candidates.first.content);\n\n```{.code}\n\n{@section flex: 3}\n\n{@column \n  flex: 2\n  align: bottom_left\n}\n\n#### JSON Response\n\n{@column flex: 3}\n\n```json\n[\n  {\n    \"recipeName\": \"Chocolate Chip Cookies\"\n  },\n  {\n    \"recipeName\": \"Peanut Butter Cookies\"\n  },\n  {\n    \"recipeName\": \"Snickerdoodles\"\n  }\n]\n```",
      "sections": [
        {
          "blocks": [
            {
              "flex": 2,
              "content": "#### Pasar un prompt a tu modelo {.heading}\n",
              "scrollable": false
            },
            {
              "flex": 3,
              "content": "```dart\nfinal prompt = 'List a few popular cookie recipes.';\nfinal response = await model.generateContent([Content.text(prompt)]);\n\nprint(response.candidates.first.content);\n\n```{.code}\n",
              "scrollable": false
            }
          ],
          "flex": 2,
          "type": "section"
        },
        {
          "blocks": [
            {
              "flex": 2,
              "align": "bottom_left",
              "content": "#### JSON Response\n",
              "scrollable": false
            },
            {
              "flex": 3,
              "content": "```json\n[\n  {\n    \"recipeName\": \"Chocolate Chip Cookies\"\n  },\n  {\n    \"recipeName\": \"Peanut Butter Cookies\"\n  },\n  {\n    \"recipeName\": \"Snickerdoodles\"\n  }\n]\n```",
              "scrollable": false
            }
          ],
          "flex": 3,
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_KvQsJipa.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "YJuyTjvl",
      "options": {},
      "markdown": "{@column}\n### Generador de paleta de colores\n\nGenera una paleta de colores basada en un texto dado.\n\n- Name of the palette\n- Font family\n- Font color\n- Color for each corner of the palette",
      "sections": [
        {
          "blocks": [
            {
              "content": "### Generador de paleta de colores\n\nGenera una paleta de colores basada en un texto dado.\n\n- Name of the palette\n- Font family\n- Font color\n- Color for each corner of the palette",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_YJuyTjvl.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "yo70fIoq",
      "options": {},
      "markdown": "```dart\nfinal schema = Schema.object(properties: {\n  'name': Schema.string(\n    description:\n        'The text content to display on color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'font': Schema.enumString(\n    enumValues: ColorPaletteFontFamily.enumString,\n    description: 'The font to use for the poster text.',\n    nullable: false,\n  ),\n  'fontColor': Schema.string(\n    description: 'The hex color value of the poster text. Format: #FF0000',\n    nullable: false,\n  ),\n  'topLeftColor': Schema.string(\n    description:\n        'The hex color value top left corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'topRightColor': Schema.string(\n    description:\n        'The hex color value top right corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'bottomLeftColor': Schema.string(\n    description:\n        'The hex color value bottom left corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'bottomRightColor': Schema.string(\n    description:\n        'The hex color value bottom right corner of color palette. Format: #FF0000',\n    nullable: false,\n  )\n}, requiredProperties: [\n  'name',\n  'font',\n  'fontColor',\n  'topLeftColor',\n  'topRightColor',\n  'bottomLeftColor',\n  'bottomRightColor',\n]);\n\n```",
      "sections": [
        {
          "blocks": [
            {
              "content": "```dart\nfinal schema = Schema.object(properties: {\n  'name': Schema.string(\n    description:\n        'The text content to display on color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'font': Schema.enumString(\n    enumValues: ColorPaletteFontFamily.enumString,\n    description: 'The font to use for the poster text.',\n    nullable: false,\n  ),\n  'fontColor': Schema.string(\n    description: 'The hex color value of the poster text. Format: #FF0000',\n    nullable: false,\n  ),\n  'topLeftColor': Schema.string(\n    description:\n        'The hex color value top left corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'topRightColor': Schema.string(\n    description:\n        'The hex color value top right corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'bottomLeftColor': Schema.string(\n    description:\n        'The hex color value bottom left corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'bottomRightColor': Schema.string(\n    description:\n        'The hex color value bottom right corner of color palette. Format: #FF0000',\n    nullable: false,\n  )\n}, requiredProperties: [\n  'name',\n  'font',\n  'fontColor',\n  'topLeftColor',\n  'topRightColor',\n  'bottomLeftColor',\n  'bottomRightColor',\n]);\n\n```",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_yo70fIoq.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "F8ytX2x7",
      "options": {
        "style": "demo"
      },
      "markdown": "{@colorPalette\n  kind: schema\n  prompts:\n    - tropical\n    - vibrant\n    - pastel\n    - chocolatey pink unicorn\n    - cyberpunk\n}",
      "sections": [
        {
          "blocks": [
            {
              "name": "colorPalette",
              "scrollable": false,
              "type": "widget",
              "kind": "schema",
              "prompts": [
                "tropical",
                "vibrant",
                "pastel",
                "chocolatey pink unicorn",
                "cyberpunk"
              ]
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_F8ytX2x7.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "UCL3ljnv",
      "options": {
        "style": "demo"
      },
      "markdown": "{@colorPalette\n  kind: widget\n  prompts:\n    - tropical\n    - vibrant\n    - pastel\n    - chocolatey pink unicorn\n    - cyberpunk\n}",
      "sections": [
        {
          "blocks": [
            {
              "name": "colorPalette",
              "scrollable": false,
              "type": "widget",
              "kind": "widget",
              "prompts": [
                "tropical",
                "vibrant",
                "pastel",
                "chocolatey pink unicorn",
                "cyberpunk"
              ]
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_UCL3ljnv.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "NQNfkx8t",
      "options": {},
      "markdown": "## Los LLM orquestan APIs",
      "sections": [
        {
          "blocks": [
            {
              "content": "## Los LLM orquestan APIs",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_NQNfkx8t.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "QQJaCN5k",
      "options": {},
      "markdown": "{@section} \n{@column}\n#### Gemini Function Calling\n{@column}\nThe Function Calling feature is in Beta release\n\n{@section flex: 4}\n![llm tools](assets/llm_tools.png){.cover}",
      "sections": [
        {
          "blocks": [
            {
              "content": "#### Gemini Function Calling",
              "scrollable": false
            },
            {
              "content": "The Function Calling feature is in Beta release\n",
              "scrollable": false
            }
          ],
          "type": "section"
        },
        {
          "blocks": [
            {
              "content": "![llm tools](assets/llm_tools.png){.cover}",
              "scrollable": false
            }
          ],
          "flex": 4,
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_QQJaCN5k.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "B4azSyhQ",
      "options": {
        "style": "demo"
      },
      "markdown": "{@lightControl \n  kind: schema\n  prompts:\n    - Dim the lights by 20\n    - Increase by 35\n    - Turn off the lights\n    - Set it to 80\n    - Lower by half\n    - Max brightness\n}",
      "sections": [
        {
          "blocks": [
            {
              "name": "lightControl",
              "scrollable": false,
              "type": "widget",
              "kind": "schema",
              "prompts": [
                "Dim the lights by 20",
                "Increase by 35",
                "Turn off the lights",
                "Set it to 80",
                "Lower by half",
                "Max brightness"
              ]
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_B4azSyhQ.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "hBq6XCkc",
      "options": {},
      "markdown": "{@column \n  align: bottom_right\n}\n\n### User Interaction {.heading}\nForma de interactuar con un LLM mediante lenguaje natural\n\n{@column\n  flex: 2\n}\n![llm response](assets/llm_interaction.png)",
      "sections": [
        {
          "blocks": [
            {
              "align": "bottom_right",
              "content": "### User Interaction {.heading}\nForma de interactuar con un LLM mediante lenguaje natural\n",
              "scrollable": false
            },
            {
              "flex": 2,
              "content": "![llm response](assets/llm_interaction.png)",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_hBq6XCkc.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "8I3fvDqR",
      "options": {},
      "markdown": "{@column\n  align: center_left\n}\n### Widget Response {.heading}\n\n{@column \n  flex: 3\n}\n![widget_response](assets/widget_response.png)",
      "sections": [
        {
          "blocks": [
            {
              "align": "center_left",
              "content": "### Widget Response {.heading}\n",
              "scrollable": false
            },
            {
              "flex": 3,
              "content": "![widget_response](assets/widget_response.png)",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_8I3fvDqR.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "wcrXMfUu",
      "options": {
        "style": "demo"
      },
      "markdown": "{@lightControl\n  kind: widget\n  prompts:\n    - Dim the lights by 20\n    - Increase by 35\n    - Turn off the lights\n    - Set it to 80\n    - Lower by half\n    - Max brightness\n}",
      "sections": [
        {
          "blocks": [
            {
              "name": "lightControl",
              "scrollable": false,
              "type": "widget",
              "kind": "widget",
              "prompts": [
                "Dim the lights by 20",
                "Increase by 35",
                "Turn off the lights",
                "Set it to 80",
                "Lower by half",
                "Max brightness"
              ]
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_wcrXMfUu.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "9yZftHgP",
      "options": {},
      "markdown": "## ¿Qué pasa si la herramienta a usar es un esquema de widget?",
      "sections": [
        {
          "blocks": [
            {
              "content": "## ¿Qué pasa si la herramienta a usar es un esquema de widget?",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_9yZftHgP.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "ubDKfZYy",
      "options": {},
      "markdown": "![widget_schema](assets/widget_schema.png)",
      "sections": [
        {
          "blocks": [
            {
              "content": "![widget_schema](assets/widget_schema.png)",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_ubDKfZYy.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "qm5WqrJY",
      "options": {},
      "markdown": "{@column flex: 2}\n### Dropdown Widget Schema\n\n```dart\nclass DropdownSchemaDto {\n  final String label;\n  final String currentValue;\n  final List<String> options;\n\n  DropdownSchemaDto({\n    required this.label,\n    required this.currentValue,\n    required this.options,\n  });\n\n```\n{@column flex: 3}\n\n```dart\n  static final schema = Schema.object(properties: {\n    'label': Schema.string(\n      description: 'The label of the dropdown',\n      nullable: false,\n    ),\n    'currentValue': Schema.string(\n      description: 'The currentValue of the dropdown',\n      nullable: false,\n    ),\n    'options': Schema.array(\n      description: 'The options of the dropdown',\n      items: Schema.string(\n        description: 'The options of the dropdown',\n        nullable: false,\n      ),\n      nullable: false,\n    )\n  });\n}\n```",
      "sections": [
        {
          "blocks": [
            {
              "flex": 2,
              "content": "### Dropdown Widget Schema\n\n```dart\nclass DropdownSchemaDto {\n  final String label;\n  final String currentValue;\n  final List<String> options;\n\n  DropdownSchemaDto({\n    required this.label,\n    required this.currentValue,\n    required this.options,\n  });\n\n```",
              "scrollable": false
            },
            {
              "flex": 3,
              "content": "```dart\n  static final schema = Schema.object(properties: {\n    'label': Schema.string(\n      description: 'The label of the dropdown',\n      nullable: false,\n    ),\n    'currentValue': Schema.string(\n      description: 'The currentValue of the dropdown',\n      nullable: false,\n    ),\n    'options': Schema.array(\n      description: 'The options of the dropdown',\n      items: Schema.string(\n        description: 'The options of the dropdown',\n        nullable: false,\n      ),\n      nullable: false,\n    )\n  });\n}\n```",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_qm5WqrJY.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "LgjZ2pSq",
      "options": {},
      "markdown": "### Dropdown Schema Builder\n\n{@column flex: 2}\n```dart\n ListTile(\n  title: Text(schema.label),\n  trailing: DropdownButton<String>(\n    value: schema.currentValue,\n    items: schema.options.map((option) {\n      return DropdownMenuItem<String>(\n        value: option,\n        child: Text(option),\n      );\n    }).toList(),\n    onChanged: (newValue) {},\n  ),\n);\n```",
      "sections": [
        {
          "blocks": [
            {
              "content": "### Dropdown Schema Builder\n",
              "scrollable": false
            },
            {
              "flex": 2,
              "content": "```dart\n ListTile(\n  title: Text(schema.label),\n  trailing: DropdownButton<String>(\n    value: schema.currentValue,\n    items: schema.options.map((option) {\n      return DropdownMenuItem<String>(\n        value: option,\n        child: Text(option),\n      );\n    }).toList(),\n    onChanged: (newValue) {},\n  ),\n);\n```",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_LgjZ2pSq.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "Wxrj9iSH",
      "options": {},
      "markdown": "### Widget Schemas\n\n\n```dart\nfinal schema = Schema.object(properties: {\n  'textFields': Schema.array(\n    description: 'A list of text fields',\n    items: TextFieldSchemaDto.schema,\n    nullable: true,\n  ),\n  'dropdowns': Schema.array(\n    description: 'A list of dropdowns',\n    items: DropdownSchemaDto.schema,\n    nullable: true,\n  ),\n  'colorPickers': Schema.array(\n    description: 'A list of colors pickers',\n    items: ColorPickerDtoSchema.schema,\n    nullable: true,\n  ),\n});\n\n```",
      "sections": [
        {
          "blocks": [
            {
              "content": "### Widget Schemas\n\n\n```dart\nfinal schema = Schema.object(properties: {\n  'textFields': Schema.array(\n    description: 'A list of text fields',\n    items: TextFieldSchemaDto.schema,\n    nullable: true,\n  ),\n  'dropdowns': Schema.array(\n    description: 'A list of dropdowns',\n    items: DropdownSchemaDto.schema,\n    nullable: true,\n  ),\n  'colorPickers': Schema.array(\n    description: 'A list of colors pickers',\n    items: ColorPickerDtoSchema.schema,\n    nullable: true,\n  ),\n});\n\n```",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_Wxrj9iSH.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "aJu8RjyT",
      "options": {
        "style": "demo"
      },
      "markdown": "{@widgetSchema\n  kind: widget\n  prompts:\n    - Change top colors\n    - Change font\n    - Change all colors\n    - Change everything\n}",
      "sections": [
        {
          "blocks": [
            {
              "name": "widgetSchema",
              "scrollable": false,
              "type": "widget",
              "kind": "widget",
              "prompts": [
                "Change top colors",
                "Change font",
                "Change all colors",
                "Change everything"
              ]
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_aJu8RjyT.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "T7Vnr2z5",
      "options": {
        "style": "quote"
      },
      "markdown": "> El futuro de la UI podría ser orquestar\n> experiencias de usuario en lugar de crearlas.",
      "sections": [
        {
          "blocks": [
            {
              "content": "> El futuro de la UI podría ser orquestar\n> experiencias de usuario en lugar de crearlas.",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": []
    },
    {
      "key": "jE8fFA9r",
      "options": {},
      "markdown": "### Gracias\n\nLeo Farias\n@leoafarias\n(GitHub, Twitter/X)\n\n#### Slides + Code\nhttps://github.com/leoafarias/gen-ui-talk\n\n{@column}\n\n### Want more AI?\nSESSION 10 - TRACK 2 - 15:20\nHat-trick: Flutter + Gemini + Vertex\nby Fabian Varela",
      "sections": [
        {
          "blocks": [
            {
              "content": "### Gracias\n\nLeo Farias\n@leoafarias\n(GitHub, Twitter/X)\n\n#### Slides + Code\nhttps://github.com/leoafarias/gen-ui-talk\n",
              "scrollable": false
            },
            {
              "content": "### Want more AI?\nSESSION 10 - TRACK 2 - 15:20\nHat-trick: Flutter + Gemini + Vertex\nby Fabian Varela",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_jE8fFA9r.png",
          "width": 512,
          "height": 288
        }
      ]
    }
  ]
}