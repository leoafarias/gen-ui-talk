{
  "config": {},
  "slides": [
    {
      "key": "m0lMk1RF",
      "options": {},
      "markdown": "{@column \n  align: center\n  flex: 1\n}\n#### Leo Farias\n@leoafarias\n\n{@column align: center_right}\n- Founder/CEO/CTO\n- Open Source Contributor\n- Flutter & Dart GDE\n- Passionate about UI/UX/DX",
      "sections": [
        {
          "sub_sections": [
            {
              "content": "\n#### Leo Farias\n@leoafarias\n",
              "options": {
                "flex": 1,
                "align": "center"
              },
              "type": "column"
            },
            {
              "content": "\n- Founder/CEO/CTO\n- Open Source Contributor\n- Flutter & Dart GDE\n- Passionate about UI/UX/DX",
              "options": {
                "align": "center_right"
              },
              "type": "column"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "JXYAv556",
      "options": {},
      "markdown": "{@section flex: 2}\n{@column\n  align: center\n  tag: heading\n}\n# Generative UI\n# with Flutter",
      "sections": [
        {
          "options": {
            "flex": 2
          },
          "sub_sections": [
            {
              "content": "\n# Generative UI\n# with Flutter",
              "options": {
                "align": "center",
                "tag": "heading"
              },
              "type": "column"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "PWx72yxc",
      "options": {},
      "markdown": "{@column \n  align: center\n  flex: 1\n}\n#### Leo Farias\n@leoafarias\n\n{@column align: center_right}\n- Founder/CEO/CTO\n- Open Source Contributor\n- Flutter & Dart GDE\n- Passionate about UI/UX/DX\n\n\n{@column}",
      "sections": [
        {
          "sub_sections": [
            {
              "content": "\n#### Leo Farias\n@leoafarias\n",
              "options": {
                "flex": 1,
                "align": "center"
              },
              "type": "column"
            },
            {
              "content": "\n- Founder/CEO/CTO\n- Open Source Contributor\n- Flutter & Dart GDE\n- Passionate about UI/UX/DX\n\n",
              "options": {
                "align": "center_right"
              },
              "type": "column"
            },
            {
              "content": "",
              "options": null,
              "type": "column"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "OnZ1cviT",
      "options": {},
      "markdown": "{@column}\n\n{@column \n  align: center_left \n  flex: 2\n}\n> [!WARNING]  \n> This presentation contains live AI-generated content. Unexpected things may occur during the demonstration.\n\n{@column}",
      "sections": [
        {
          "sub_sections": [
            {
              "content": "\n",
              "options": null,
              "type": "column"
            },
            {
              "content": "\n> [!WARNING]  \n> This presentation contains live AI-generated content. Unexpected things may occur during the demonstration.\n",
              "options": {
                "flex": 2,
                "align": "center_left"
              },
              "type": "column"
            },
            {
              "content": "",
              "options": null,
              "type": "column"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "D4etKl0J",
      "options": {},
      "markdown": "{@column \n  flex: 2 \n  align: center_right\n}\n### Generative UI\n{@column}\n## VS\n{@column flex: 2}\n### AI Assisted Code Generation",
      "sections": [
        {
          "sub_sections": [
            {
              "content": "\n### Generative UI",
              "options": {
                "flex": 2,
                "align": "center_right"
              },
              "type": "column"
            },
            {
              "content": "\n## VS",
              "options": null,
              "type": "column"
            },
            {
              "content": "\n### AI Assisted Code Generation",
              "options": {
                "flex": 2
              },
              "type": "column"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "4E2GOMRu",
      "options": {},
      "markdown": "### What is Generative UI?\n\n{@column}\n\n- LLMs are great at generating content based on context\n- GUIs are great at providing structured, interactive interfaces for user input and navigation",
      "sections": [
        {
          "sub_sections": [
            {
              "content": "### What is Generative UI?\n",
              "type": "column"
            },
            {
              "content": "\n\n- LLMs are great at generating content based on context\n- GUIs are great at providing structured, interactive interfaces for user input and navigation",
              "options": null,
              "type": "column"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "7qVeHjc5",
      "options": {},
      "markdown": "# LLM ❤️ GUI",
      "sections": [
        {
          "sub_sections": [
            {
              "content": "# LLM ❤️ GUI",
              "type": "column"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "D6lTKmGt",
      "options": {},
      "markdown": "{@column}\n{@column\n  flex: 2\n  align: center\n}\nCreates dynamic, context-aware UIs by interpreting actions and maintaining state with LLMs for fluid, interactive responses.\n\n{@column}",
      "sections": [
        {
          "sub_sections": [
            {
              "content": "",
              "options": null,
              "type": "column"
            },
            {
              "content": "\nCreates dynamic, context-aware UIs by interpreting actions and maintaining state with LLMs for fluid, interactive responses.\n",
              "options": {
                "flex": 2,
                "align": "center"
              },
              "type": "column"
            },
            {
              "content": "",
              "options": null,
              "type": "column"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "hHrCdu5G",
      "options": {},
      "markdown": "### Benefits of UI over Chat\n\n- More intuitive and user-friendly, especially for complex tasks\n- Faster feedback loop between users and LLMs\n- Enhances efficiency and interaction",
      "sections": [
        {
          "sub_sections": [
            {
              "content": "### Benefits of UI over Chat\n\n- More intuitive and user-friendly, especially for complex tasks\n- Faster feedback loop between users and LLMs\n- Enhances efficiency and interaction",
              "type": "column"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "57d9uRwZ",
      "options": {},
      "markdown": "{@column\n  flex: 3 \n  align: center\n}\n### Flutter is Well-Suited for Generative UI\nBuilt for any screen: Ideal for generating adaptive UIs across devices and platforms.\n{@column}",
      "sections": [
        {
          "sub_sections": [
            {
              "content": "\n### Flutter is Well-Suited for Generative UI\nBuilt for any screen: Ideal for generating adaptive UIs across devices and platforms.",
              "options": {
                "flex": 3,
                "align": "center"
              },
              "type": "column"
            },
            {
              "content": "",
              "options": null,
              "type": "column"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "GDamh4hN",
      "options": {},
      "markdown": "## How can LLMs Understtand Your UI?\n\n{@column tag: image}\n![structured_output](assets/structured_output.png)",
      "sections": [
        {
          "sub_sections": [
            {
              "content": "## How can LLMs Understtand Your UI?\n",
              "type": "column"
            },
            {
              "content": "\n![structured_output](assets/structured_output.png)",
              "options": {
                "tag": "image"
              },
              "type": "column"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "hi7HztOa",
      "options": {},
      "markdown": "{@column}\n\n## Structured Output\n{@column}\n\n```dart\nfinal schema = Schema.array(\n  description: 'List of recipes',\n  items: Schema.object(\n    properties: {\n      'recipeName': Schema.string(\n        description: 'Name of the recipe.',\n        nullable: false,\n      ),\n    },\n    requiredProperties: ['recipeName'],\n  ),\n);\n\nfinal model = GenerativeModel(\n  model: 'gemini-1.5-pro',\n  apiKey: apiKey,\n  generationConfig: GenerationConfig(\n    responseMimeType: 'application/json',\n    responseSchema: schema,\n  ),\n);\n\nfinal prompt = 'List a few popular cookie recipes.';\nfinal response = await model.generateContent([Content.text(prompt)]);\n\n```",
      "sections": [
        {
          "sub_sections": [
            {
              "content": "\n\n## Structured Output",
              "options": null,
              "type": "column"
            },
            {
              "content": "\n\n```dart\nfinal schema = Schema.array(\n  description: 'List of recipes',\n  items: Schema.object(\n    properties: {\n      'recipeName': Schema.string(\n        description: 'Name of the recipe.',\n        nullable: false,\n      ),\n    },\n    requiredProperties: ['recipeName'],\n  ),\n);\n\nfinal model = GenerativeModel(\n  model: 'gemini-1.5-pro',\n  apiKey: apiKey,\n  generationConfig: GenerationConfig(\n    responseMimeType: 'application/json',\n    responseSchema: schema,\n  ),\n);\n\nfinal prompt = 'List a few popular cookie recipes.';\nfinal response = await model.generateContent([Content.text(prompt)]);\n\n```",
              "options": null,
              "type": "column"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "6EU2Xxrf",
      "options": {},
      "markdown": "{@column}\n### Color Palette Generator\n\nGenerate a color palette based on a given text.\n\n- Name of the palette\n- Font family\n- Font color\n- Color for each corner of the palette",
      "sections": [
        {
          "sub_sections": [
            {
              "content": "\n### Color Palette Generator\n\nGenerate a color palette based on a given text.\n\n- Name of the palette\n- Font family\n- Font color\n- Color for each corner of the palette",
              "options": null,
              "type": "column"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "qek7UrZY",
      "options": {},
      "markdown": "{@column}\n```dart\nfinal schema = Schema.object(properties: {\n  'name': Schema.string(\n    description:\n        'The text content to display on color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'font': Schema.enumString(\n    enumValues: ColorPaletteFontFamily.enumString,\n    description: 'The font to use for the poster text.',\n    nullable: false,\n  ),\n  'fontColor': Schema.string(\n    description: 'The hex color value of the poster text. Format: #FF0000',\n    nullable: false,\n  ),\n  'topLeftColor': Schema.string(\n    description:\n        'The hex color value top left corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'topRightColor': Schema.string(\n    description:\n        'The hex color value top right corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'bottomLeftColor': Schema.string(\n    description:\n        'The hex color value bottom left corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'bottomRightColor': Schema.string(\n    description:\n        'The hex color value bottom right corner of color palette. Format: #FF0000',\n    nullable: false,\n  )\n}, requiredProperties: [\n  'name',\n  'font',\n  'fontColor',\n  'topLeftColor',\n  'topRightColor',\n  'bottomLeftColor',\n  'bottomRightColor',\n]);\n\n```",
      "sections": [
        {
          "sub_sections": [
            {
              "content": "\n```dart\nfinal schema = Schema.object(properties: {\n  'name': Schema.string(\n    description:\n        'The text content to display on color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'font': Schema.enumString(\n    enumValues: ColorPaletteFontFamily.enumString,\n    description: 'The font to use for the poster text.',\n    nullable: false,\n  ),\n  'fontColor': Schema.string(\n    description: 'The hex color value of the poster text. Format: #FF0000',\n    nullable: false,\n  ),\n  'topLeftColor': Schema.string(\n    description:\n        'The hex color value top left corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'topRightColor': Schema.string(\n    description:\n        'The hex color value top right corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'bottomLeftColor': Schema.string(\n    description:\n        'The hex color value bottom left corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'bottomRightColor': Schema.string(\n    description:\n        'The hex color value bottom right corner of color palette. Format: #FF0000',\n    nullable: false,\n  )\n}, requiredProperties: [\n  'name',\n  'font',\n  'fontColor',\n  'topLeftColor',\n  'topRightColor',\n  'bottomLeftColor',\n  'bottomRightColor',\n]);\n\n```",
              "options": null,
              "type": "column"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "8DDlBdti",
      "options": {
        "style": "demo"
      },
      "markdown": "{@colorPalette\n  type: schema\n  prompts:\n    - tropical\n    - vibrant\n    - pastel\n    - chocolatey pink unicorn\n    - cyberpunk\n}",
      "sections": [
        {
          "sub_sections": [
            {
              "options": {
                "name": "colorPalette",
                "type": "schema",
                "prompts": [
                  "tropical",
                  "vibrant",
                  "pastel",
                  "chocolatey pink unicorn",
                  "cyberpunk"
                ]
              },
              "content": "",
              "type": "widget"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "m7QWZujG",
      "options": {
        "style": "demo"
      },
      "markdown": "{@colorPalette\n  type: widget\n  prompts:\n    - tropical\n    - vibrant\n    - pastel\n    - chocolatey pink unicorn\n    - cyberpunk\n}",
      "sections": [
        {
          "sub_sections": [
            {
              "options": {
                "name": "colorPalette",
                "type": "widget",
                "prompts": [
                  "tropical",
                  "vibrant",
                  "pastel",
                  "chocolatey pink unicorn",
                  "cyberpunk"
                ]
              },
              "content": "",
              "type": "widget"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "H0jUl8Aj",
      "options": {},
      "markdown": "## LLMs Orchestrate APIs",
      "sections": [
        {
          "sub_sections": [
            {
              "content": "## LLMs Orchestrate APIs",
              "type": "column"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "srY9Srz1",
      "options": {},
      "markdown": "{@column \n  align: center_right\n  tag: heading\n  flex: 3\n} \n\n### Gemini Function Calling\nThe Function Calling feature is in Beta release\n\n\n![llm tools](assets/llm_tools.png){.cover}",
      "sections": [
        {
          "sub_sections": [
            {
              "content": "\n\n### Gemini Function Calling\nThe Function Calling feature is in Beta release\n\n\n![llm tools](assets/llm_tools.png){.cover}",
              "options": {
                "flex": 3,
                "align": "center_right",
                "tag": "heading"
              },
              "type": "column"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "85oPyLzH",
      "options": {
        "style": "demo"
      },
      "markdown": "{@lightControl \n  type: schema\n  prompts:\n    - Dim the lights by 20\n    - Increase by 35\n    - Turn off the lights\n    - Set it to 80\n    - Lower by half\n    - Max brightness\n}",
      "sections": [
        {
          "sub_sections": [
            {
              "options": {
                "name": "lightControl",
                "type": "schema",
                "prompts": [
                  "Dim the lights by 20",
                  "Increase by 35",
                  "Turn off the lights",
                  "Set it to 80",
                  "Lower by half",
                  "Max brightness"
                ]
              },
              "content": "",
              "type": "widget"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "cU4QSRK1",
      "options": {},
      "markdown": "{@column \n  align: bottom_right\n  tag: heading\n}\n\n### User Interaction\nNatural Language way to interact with an LLM\n\n{@column\n  tag: image\n  flex: 3\n}\n![llm response](assets/llm_interaction.png)",
      "sections": [
        {
          "sub_sections": [
            {
              "content": "\n\n### User Interaction\nNatural Language way to interact with an LLM\n",
              "options": {
                "align": "bottom_right",
                "tag": "heading"
              },
              "type": "column"
            },
            {
              "content": "\n![llm response](assets/llm_interaction.png)",
              "options": {
                "flex": 3,
                "tag": "image"
              },
              "type": "column"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "pTufGpKn",
      "options": {},
      "markdown": "{@column\n  align: center_left\n  tag: heading\n}\n### Widget Response\n\n{@column \n  flex: 3\n  tag: image\n}\n![widget_response](assets/widget_response.png)",
      "sections": [
        {
          "sub_sections": [
            {
              "content": "\n### Widget Response\n",
              "options": {
                "align": "center_left",
                "tag": "heading"
              },
              "type": "column"
            },
            {
              "content": "\n![widget_response](assets/widget_response.png)",
              "options": {
                "flex": 3,
                "tag": "image"
              },
              "type": "column"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "3eFdrtdl",
      "options": {
        "style": "demo"
      },
      "markdown": "{@lightControl\n  type: widget\n  prompts:\n    - Dim the lights by 20\n    - Increase by 35\n    - Turn off the lights\n    - Set it to 80\n    - Lower by half\n    - Max brightness\n}",
      "sections": [
        {
          "sub_sections": [
            {
              "options": {
                "name": "lightControl",
                "type": "widget",
                "prompts": [
                  "Dim the lights by 20",
                  "Increase by 35",
                  "Turn off the lights",
                  "Set it to 80",
                  "Lower by half",
                  "Max brightness"
                ]
              },
              "content": "",
              "type": "widget"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "pNxPyfLK",
      "options": {},
      "markdown": "## What if the tool to use is a widget schema?",
      "sections": [
        {
          "sub_sections": [
            {
              "content": "## What if the tool to use is a widget schema?",
              "type": "column"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "5cGNbsJx",
      "options": {},
      "markdown": "### Experimental\n\n```dart\nfinal schema = Schema.object(properties: {\n  'textFields': Schema.array(\n    description: 'A list of text fields',\n    items: TextFieldSchemaDto.schema,\n    nullable: true,\n  ),\n  'dropdowns': Schema.array(\n    description: 'A list of dropdowns',\n    items: DropdownSchemaDto.schema,\n    nullable: true,\n  ),\n  'colorPickers': Schema.array(\n    description: 'A list of colors pickers',\n    items: ColorPickerDtoSchema.schema,\n    nullable: true,\n  ),\n});\n\n```",
      "sections": [
        {
          "sub_sections": [
            {
              "content": "### Experimental\n\n```dart\nfinal schema = Schema.object(properties: {\n  'textFields': Schema.array(\n    description: 'A list of text fields',\n    items: TextFieldSchemaDto.schema,\n    nullable: true,\n  ),\n  'dropdowns': Schema.array(\n    description: 'A list of dropdowns',\n    items: DropdownSchemaDto.schema,\n    nullable: true,\n  ),\n  'colorPickers': Schema.array(\n    description: 'A list of colors pickers',\n    items: ColorPickerDtoSchema.schema,\n    nullable: true,\n  ),\n});\n\n```",
              "type": "column"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "J6DNhZau",
      "options": {
        "style": "demo"
      },
      "markdown": "{@widgetSchema\n  type: widget\n  prompts:\n    - Change top colors\n    - Change font\n    - Change all colors\n    - Change everything\n}",
      "sections": [
        {
          "sub_sections": [
            {
              "options": {
                "name": "widgetSchema",
                "type": "widget",
                "prompts": [
                  "Change top colors",
                  "Change font",
                  "Change all colors",
                  "Change everything"
                ]
              },
              "content": "",
              "type": "widget"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "3kW1wOHd",
      "options": {},
      "markdown": "## The future of UI might be orchestrating user experiences rather than creating it.",
      "sections": [
        {
          "sub_sections": [
            {
              "content": "## The future of UI might be orchestrating user experiences rather than creating it.",
              "type": "column"
            }
          ]
        }
      ],
      "notes": []
    },
    {
      "key": "UqCN11cB",
      "options": {},
      "markdown": "### Thank you\n\nLeo Farias\n@leoafarias\n(GitHub, Twitter/X)",
      "sections": [
        {
          "sub_sections": [
            {
              "content": "### Thank you\n\nLeo Farias\n@leoafarias\n(GitHub, Twitter/X)",
              "type": "column"
            }
          ]
        }
      ],
      "notes": []
    }
  ],
  "assets": [
    {
      "path": ".superdeck/generated/thumbnail_JXYAv556.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_PWx72yxc.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_OnZ1cviT.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_D4etKl0J.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_4E2GOMRu.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_7qVeHjc5.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_D6lTKmGt.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_hHrCdu5G.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_57d9uRwZ.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_GDamh4hN.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_hi7HztOa.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_6EU2Xxrf.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_qek7UrZY.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_8DDlBdti.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_m7QWZujG.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_H0jUl8Aj.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_85oPyLzH.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_cU4QSRK1.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_pTufGpKn.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_3eFdrtdl.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_pNxPyfLK.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_5cGNbsJx.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_J6DNhZau.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_3kW1wOHd.png",
      "width": 512,
      "height": 288
    },
    {
      "path": ".superdeck/generated/thumbnail_UqCN11cB.png",
      "width": 512,
      "height": 288
    }
  ]
}