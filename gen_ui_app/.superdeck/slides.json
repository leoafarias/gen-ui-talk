{
  "config": {},
  "slides": [
    {
      "key": "bCJeLzLi",
      "options": {},
      "markdown": "{@section flex: 2}\n{@column\n  align: center\n}\n# Generative UI\n# with Flutter",
      "sections": [
        {
          "blocks": [
            {
              "align": "center",
              "content": "# Generative UI\n# with Flutter",
              "scrollable": false
            }
          ],
          "flex": 2,
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_bCJeLzLi.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "spKrChRz",
      "options": {},
      "markdown": "{@column \n  align: center\n}\n\n#### Leo Farias\n@leoafarias\n\n{@column align: center_left}\n- Founder/CEO/CTO\n- Open Source Contributor\n- Flutter & Dart GDE\n- Passionate about UI/UX/DX",
      "sections": [
        {
          "blocks": [
            {
              "align": "center",
              "content": "#### Leo Farias\n@leoafarias\n",
              "scrollable": false
            },
            {
              "align": "center_left",
              "content": "- Founder/CEO/CTO\n- Open Source Contributor\n- Flutter & Dart GDE\n- Passionate about UI/UX/DX",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_spKrChRz.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "OnZ1cviT",
      "options": {},
      "markdown": "{@column}\n\n{@column \n  align: center_left \n  flex: 2\n}\n> [!WARNING]  \n> This presentation contains live AI-generated content. Unexpected things may occur during the demonstration.\n\n{@column}",
      "sections": [
        {
          "blocks": [
            {
              "content": "",
              "scrollable": false
            },
            {
              "flex": 2,
              "align": "center_left",
              "content": "> [!WARNING]  \n> This presentation contains live AI-generated content. Unexpected things may occur during the demonstration.\n",
              "scrollable": false
            },
            {
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_OnZ1cviT.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "D4etKl0J",
      "options": {},
      "markdown": "{@column \n  flex: 2 \n  align: center_right\n}\n### Generative UI\n{@column}\n## VS\n{@column flex: 2}\n### AI Assisted Code Generation",
      "sections": [
        {
          "blocks": [
            {
              "flex": 2,
              "align": "center_right",
              "content": "### Generative UI",
              "scrollable": false
            },
            {
              "content": "## VS",
              "scrollable": false
            },
            {
              "flex": 2,
              "content": "### AI Assisted Code Generation",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_D4etKl0J.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "4E2GOMRu",
      "options": {},
      "markdown": "### What is Generative UI?\n\n{@column}\n\n- LLMs are great at generating content based on context\n- GUIs are great at providing structured, interactive interfaces for user input and navigation",
      "sections": [
        {
          "blocks": [
            {
              "content": "### What is Generative UI?\n",
              "scrollable": false
            },
            {
              "content": "- LLMs are great at generating content based on context\n- GUIs are great at providing structured, interactive interfaces for user input and navigation",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_4E2GOMRu.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "7qVeHjc5",
      "options": {},
      "markdown": "# LLM ❤️ GUI",
      "sections": [
        {
          "blocks": [
            {
              "content": "# LLM ❤️ GUI",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_7qVeHjc5.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "D6lTKmGt",
      "options": {},
      "markdown": "{@column}\n{@column\n  flex: 2\n  align: center\n}\nCreates dynamic, context-aware UIs by interpreting actions and maintaining state with LLMs for fluid, interactive responses.\n\n{@column}",
      "sections": [
        {
          "blocks": [
            {
              "scrollable": false
            },
            {
              "flex": 2,
              "align": "center",
              "content": "Creates dynamic, context-aware UIs by interpreting actions and maintaining state with LLMs for fluid, interactive responses.\n",
              "scrollable": false
            },
            {
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_D6lTKmGt.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "hHrCdu5G",
      "options": {},
      "markdown": "### Benefits of UI over Chat\n\n- More intuitive and user-friendly, especially for complex tasks\n- Faster feedback loop between users and LLMs\n- Enhances efficiency and interaction",
      "sections": [
        {
          "blocks": [
            {
              "content": "### Benefits of UI over Chat\n\n- More intuitive and user-friendly, especially for complex tasks\n- Faster feedback loop between users and LLMs\n- Enhances efficiency and interaction",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_hHrCdu5G.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "BCBPTGpJ",
      "options": {},
      "markdown": "{@column\n  flex: 3 \n  align: center\n}\n### Flutter is Well-Suited for Generative UI\nBuilt for any screen: Ideal for generating adaptive UIs across devices and platforms.",
      "sections": [
        {
          "blocks": [
            {
              "flex": 3,
              "align": "center",
              "content": "### Flutter is Well-Suited for Generative UI\nBuilt for any screen: Ideal for generating adaptive UIs across devices and platforms.",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_BCBPTGpJ.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "6Jo26Y4b",
      "options": {},
      "markdown": "## How can LLMs Understand Your UI?\n\n{@column}\n\n![structured_output](assets/structured_output.png)",
      "sections": [
        {
          "blocks": [
            {
              "content": "## How can LLMs Understand Your UI?\n",
              "scrollable": false
            },
            {
              "content": "![structured_output](assets/structured_output.png)",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_6Jo26Y4b.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "jDEVRy3D",
      "options": {},
      "markdown": "{@column}\n\n### Define the Schema {.heading}\n\n{@column}\n\n```dart\nfinal schema = Schema.array(\n  description: 'List of recipes',\n  items: Schema.object(\n    properties: {\n      'recipeName': Schema.string(\n        description: 'Name of the recipe.',\n        nullable: false,\n      ),\n    },\n    requiredProperties: ['recipeName'],\n  ),\n);\n\n```{.code}",
      "sections": [
        {
          "blocks": [
            {
              "content": "### Define the Schema {.heading}\n",
              "scrollable": false
            },
            {
              "content": "```dart\nfinal schema = Schema.array(\n  description: 'List of recipes',\n  items: Schema.object(\n    properties: {\n      'recipeName': Schema.string(\n        description: 'Name of the recipe.',\n        nullable: false,\n      ),\n    },\n    requiredProperties: ['recipeName'],\n  ),\n);\n\n```{.code}",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_jDEVRy3D.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "3diQGYW8",
      "options": {},
      "markdown": "{@column align: bottom_center}\n\n### Configure responseMimeType & responseSchema {.heading}\n\n{@column}\n\n```dart\nfinal schema = Schema.array(\n  description: 'List of recipes',\n  items: Schema.object(\n    properties: {\n      'recipeName': Schema.string(\n        description: 'Name of the recipe.',\n        nullable: false,\n      ),\n    },\n    requiredProperties: ['recipeName'],\n  ),\n);\n\n\nfinal model = GenerativeModel(\n  model: 'gemini-1.5-pro',\n  apiKey: apiKey,\n  generationConfig: GenerationConfig(\n    responseMimeType: 'application/json',\n    responseSchema: schema,\n  ),\n);\n\n```{.code}",
      "sections": [
        {
          "blocks": [
            {
              "align": "bottom_center",
              "content": "### Configure responseMimeType & responseSchema {.heading}\n",
              "scrollable": false
            },
            {
              "content": "```dart\nfinal schema = Schema.array(\n  description: 'List of recipes',\n  items: Schema.object(\n    properties: {\n      'recipeName': Schema.string(\n        description: 'Name of the recipe.',\n        nullable: false,\n      ),\n    },\n    requiredProperties: ['recipeName'],\n  ),\n);\n\n\nfinal model = GenerativeModel(\n  model: 'gemini-1.5-pro',\n  apiKey: apiKey,\n  generationConfig: GenerationConfig(\n    responseMimeType: 'application/json',\n    responseSchema: schema,\n  ),\n);\n\n```{.code}",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_3diQGYW8.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "CnWvT9H8",
      "options": {},
      "markdown": "{@section flex: 2}\n\n\n{@column flex: 2}\n\n#### Passing a prompt to your model {.heading}\n\n{@column flex: 3}\n\n```dart\nfinal prompt = 'List a few popular cookie recipes.';\nfinal response = await model.generateContent([Content.text(prompt)]);\n\nprint(response.candidates.first.content);\n\n```{.code}\n\n{@section flex: 3}\n\n{@column \n  flex: 2\n  align: bottom_left\n}\n\n#### JSON Response\n\n{@column flex: 3}\n\n```json\n[\n  {\n    \"recipeName\": \"Chocolate Chip Cookies\"\n  },\n  {\n    \"recipeName\": \"Peanut Butter Cookies\"\n  },\n  {\n    \"recipeName\": \"Snickerdoodles\"\n  }\n]\n```",
      "sections": [
        {
          "blocks": [
            {
              "flex": 2,
              "content": "#### Passing a prompt to your model {.heading}\n",
              "scrollable": false
            },
            {
              "flex": 3,
              "content": "```dart\nfinal prompt = 'List a few popular cookie recipes.';\nfinal response = await model.generateContent([Content.text(prompt)]);\n\nprint(response.candidates.first.content);\n\n```{.code}\n",
              "scrollable": false
            }
          ],
          "flex": 2,
          "type": "section"
        },
        {
          "blocks": [
            {
              "flex": 2,
              "align": "bottom_left",
              "content": "#### JSON Response\n",
              "scrollable": false
            },
            {
              "flex": 3,
              "content": "```json\n[\n  {\n    \"recipeName\": \"Chocolate Chip Cookies\"\n  },\n  {\n    \"recipeName\": \"Peanut Butter Cookies\"\n  },\n  {\n    \"recipeName\": \"Snickerdoodles\"\n  }\n]\n```",
              "scrollable": false
            }
          ],
          "flex": 3,
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_CnWvT9H8.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "6EU2Xxrf",
      "options": {},
      "markdown": "{@column}\n### Color Palette Generator\n\nGenerate a color palette based on a given text.\n\n- Name of the palette\n- Font family\n- Font color\n- Color for each corner of the palette",
      "sections": [
        {
          "blocks": [
            {
              "content": "### Color Palette Generator\n\nGenerate a color palette based on a given text.\n\n- Name of the palette\n- Font family\n- Font color\n- Color for each corner of the palette",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_6EU2Xxrf.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "yo70fIoq",
      "options": {},
      "markdown": "```dart\nfinal schema = Schema.object(properties: {\n  'name': Schema.string(\n    description:\n        'The text content to display on color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'font': Schema.enumString(\n    enumValues: ColorPaletteFontFamily.enumString,\n    description: 'The font to use for the poster text.',\n    nullable: false,\n  ),\n  'fontColor': Schema.string(\n    description: 'The hex color value of the poster text. Format: #FF0000',\n    nullable: false,\n  ),\n  'topLeftColor': Schema.string(\n    description:\n        'The hex color value top left corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'topRightColor': Schema.string(\n    description:\n        'The hex color value top right corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'bottomLeftColor': Schema.string(\n    description:\n        'The hex color value bottom left corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'bottomRightColor': Schema.string(\n    description:\n        'The hex color value bottom right corner of color palette. Format: #FF0000',\n    nullable: false,\n  )\n}, requiredProperties: [\n  'name',\n  'font',\n  'fontColor',\n  'topLeftColor',\n  'topRightColor',\n  'bottomLeftColor',\n  'bottomRightColor',\n]);\n\n```",
      "sections": [
        {
          "blocks": [
            {
              "content": "```dart\nfinal schema = Schema.object(properties: {\n  'name': Schema.string(\n    description:\n        'The text content to display on color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'font': Schema.enumString(\n    enumValues: ColorPaletteFontFamily.enumString,\n    description: 'The font to use for the poster text.',\n    nullable: false,\n  ),\n  'fontColor': Schema.string(\n    description: 'The hex color value of the poster text. Format: #FF0000',\n    nullable: false,\n  ),\n  'topLeftColor': Schema.string(\n    description:\n        'The hex color value top left corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'topRightColor': Schema.string(\n    description:\n        'The hex color value top right corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'bottomLeftColor': Schema.string(\n    description:\n        'The hex color value bottom left corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'bottomRightColor': Schema.string(\n    description:\n        'The hex color value bottom right corner of color palette. Format: #FF0000',\n    nullable: false,\n  )\n}, requiredProperties: [\n  'name',\n  'font',\n  'fontColor',\n  'topLeftColor',\n  'topRightColor',\n  'bottomLeftColor',\n  'bottomRightColor',\n]);\n\n```",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_yo70fIoq.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "F8ytX2x7",
      "options": {
        "style": "demo"
      },
      "markdown": "{@colorPalette\n  kind: schema\n  prompts:\n    - tropical\n    - vibrant\n    - pastel\n    - chocolatey pink unicorn\n    - cyberpunk\n}",
      "sections": [
        {
          "blocks": [
            {
              "name": "colorPalette",
              "scrollable": false,
              "type": "widget",
              "kind": "schema",
              "prompts": [
                "tropical",
                "vibrant",
                "pastel",
                "chocolatey pink unicorn",
                "cyberpunk"
              ]
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_F8ytX2x7.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "UCL3ljnv",
      "options": {
        "style": "demo"
      },
      "markdown": "{@colorPalette\n  kind: widget\n  prompts:\n    - tropical\n    - vibrant\n    - pastel\n    - chocolatey pink unicorn\n    - cyberpunk\n}",
      "sections": [
        {
          "blocks": [
            {
              "name": "colorPalette",
              "scrollable": false,
              "type": "widget",
              "kind": "widget",
              "prompts": [
                "tropical",
                "vibrant",
                "pastel",
                "chocolatey pink unicorn",
                "cyberpunk"
              ]
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_UCL3ljnv.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "H0jUl8Aj",
      "options": {},
      "markdown": "## LLMs Orchestrate APIs",
      "sections": [
        {
          "blocks": [
            {
              "content": "## LLMs Orchestrate APIs",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_H0jUl8Aj.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "QQJaCN5k",
      "options": {},
      "markdown": "{@section} \n{@column}\n#### Gemini Function Calling\n{@column}\nThe Function Calling feature is in Beta release\n\n{@section flex: 4}\n![llm tools](assets/llm_tools.png){.cover}",
      "sections": [
        {
          "blocks": [
            {
              "content": "#### Gemini Function Calling",
              "scrollable": false
            },
            {
              "content": "The Function Calling feature is in Beta release\n",
              "scrollable": false
            }
          ],
          "type": "section"
        },
        {
          "blocks": [
            {
              "content": "![llm tools](assets/llm_tools.png){.cover}",
              "scrollable": false
            }
          ],
          "flex": 4,
          "type": "section"
        }
      ],
      "notes": [],
      "assets": []
    },
    {
      "key": "B4azSyhQ",
      "options": {
        "style": "demo"
      },
      "markdown": "{@lightControl \n  kind: schema\n  prompts:\n    - Dim the lights by 20\n    - Increase by 35\n    - Turn off the lights\n    - Set it to 80\n    - Lower by half\n    - Max brightness\n}",
      "sections": [
        {
          "blocks": [
            {
              "name": "lightControl",
              "scrollable": false,
              "type": "widget",
              "kind": "schema",
              "prompts": [
                "Dim the lights by 20",
                "Increase by 35",
                "Turn off the lights",
                "Set it to 80",
                "Lower by half",
                "Max brightness"
              ]
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_B4azSyhQ.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "5dttoW9C",
      "options": {},
      "markdown": "{@column \n  align: bottom_right\n}\n\n### User Interaction {.heading}\nNatural Language way to interact with an LLM\n\n{@column\n  flex: 2\n}\n![llm response](assets/llm_interaction.png)",
      "sections": [
        {
          "blocks": [
            {
              "align": "bottom_right",
              "content": "### User Interaction {.heading}\nNatural Language way to interact with an LLM\n",
              "scrollable": false
            },
            {
              "flex": 2,
              "content": "![llm response](assets/llm_interaction.png)",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_5dttoW9C.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "8I3fvDqR",
      "options": {},
      "markdown": "{@column\n  align: center_left\n}\n### Widget Response {.heading}\n\n{@column \n  flex: 3\n}\n![widget_response](assets/widget_response.png)",
      "sections": [
        {
          "blocks": [
            {
              "align": "center_left",
              "content": "### Widget Response {.heading}\n",
              "scrollable": false
            },
            {
              "flex": 3,
              "content": "![widget_response](assets/widget_response.png)",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_8I3fvDqR.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "wcrXMfUu",
      "options": {
        "style": "demo"
      },
      "markdown": "{@lightControl\n  kind: widget\n  prompts:\n    - Dim the lights by 20\n    - Increase by 35\n    - Turn off the lights\n    - Set it to 80\n    - Lower by half\n    - Max brightness\n}",
      "sections": [
        {
          "blocks": [
            {
              "name": "lightControl",
              "scrollable": false,
              "type": "widget",
              "kind": "widget",
              "prompts": [
                "Dim the lights by 20",
                "Increase by 35",
                "Turn off the lights",
                "Set it to 80",
                "Lower by half",
                "Max brightness"
              ]
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_wcrXMfUu.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "pNxPyfLK",
      "options": {},
      "markdown": "## What if the tool to use is a widget schema?",
      "sections": [
        {
          "blocks": [
            {
              "content": "## What if the tool to use is a widget schema?",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_pNxPyfLK.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "5cGNbsJx",
      "options": {},
      "markdown": "### Experimental\n\n```dart\nfinal schema = Schema.object(properties: {\n  'textFields': Schema.array(\n    description: 'A list of text fields',\n    items: TextFieldSchemaDto.schema,\n    nullable: true,\n  ),\n  'dropdowns': Schema.array(\n    description: 'A list of dropdowns',\n    items: DropdownSchemaDto.schema,\n    nullable: true,\n  ),\n  'colorPickers': Schema.array(\n    description: 'A list of colors pickers',\n    items: ColorPickerDtoSchema.schema,\n    nullable: true,\n  ),\n});\n\n```",
      "sections": [
        {
          "blocks": [
            {
              "content": "### Experimental\n\n```dart\nfinal schema = Schema.object(properties: {\n  'textFields': Schema.array(\n    description: 'A list of text fields',\n    items: TextFieldSchemaDto.schema,\n    nullable: true,\n  ),\n  'dropdowns': Schema.array(\n    description: 'A list of dropdowns',\n    items: DropdownSchemaDto.schema,\n    nullable: true,\n  ),\n  'colorPickers': Schema.array(\n    description: 'A list of colors pickers',\n    items: ColorPickerDtoSchema.schema,\n    nullable: true,\n  ),\n});\n\n```",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_5cGNbsJx.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "aJu8RjyT",
      "options": {
        "style": "demo"
      },
      "markdown": "{@widgetSchema\n  kind: widget\n  prompts:\n    - Change top colors\n    - Change font\n    - Change all colors\n    - Change everything\n}",
      "sections": [
        {
          "blocks": [
            {
              "name": "widgetSchema",
              "scrollable": false,
              "type": "widget",
              "kind": "widget",
              "prompts": [
                "Change top colors",
                "Change font",
                "Change all colors",
                "Change everything"
              ]
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_aJu8RjyT.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "3kW1wOHd",
      "options": {},
      "markdown": "## The future of UI might be orchestrating user experiences rather than creating it.",
      "sections": [
        {
          "blocks": [
            {
              "content": "## The future of UI might be orchestrating user experiences rather than creating it.",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_3kW1wOHd.png",
          "width": 512,
          "height": 288
        }
      ]
    },
    {
      "key": "UqCN11cB",
      "options": {},
      "markdown": "### Thank you\n\nLeo Farias\n@leoafarias\n(GitHub, Twitter/X)",
      "sections": [
        {
          "blocks": [
            {
              "content": "### Thank you\n\nLeo Farias\n@leoafarias\n(GitHub, Twitter/X)",
              "scrollable": false
            }
          ],
          "type": "section"
        }
      ],
      "notes": [],
      "assets": [
        {
          "path": ".superdeck/generated/thumbnail_UqCN11cB.png",
          "width": 512,
          "height": 288
        }
      ]
    }
  ]
}